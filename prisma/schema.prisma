// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Book {
  id               Int               @id @default(autoincrement())
  title            String            @db.VarChar(255)
  isbn             String            @unique @db.VarChar(20)
  author           Author            @relation(fields: [authorId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  authorId         Int
  bookCategories   BookCategory[]
  borrowingDetails BorrowingDetail[]

  @@index([title])
}

model Category {
  id             Int            @id @default(autoincrement())
  categoryName   String         @unique @db.VarChar(100)
  bookCategories BookCategory[]
}

model BookCategory {
  book       Book     @relation(fields: [bookId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bookId     Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId Int

  @@id([bookId, categoryId])
  @@index([categoryId])
}

model Author {
  id             Int           @id @default(autoincrement())
  firstName      String        @db.VarChar(100)
  lastName       String        @db.VarChar(100)
  organization   Organization? @relation(fields: [organizationId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  organizationId Int?
  books          Book[]

  @@index([lastName, firstName])
}

model Organization {
  id               Int      @id @default(autoincrement())
  organizationName String   @db.VarChar(255)
  authors          Author[]

  @@index([organizationName])
}

model Member {
  id         Int         @id @default(autoincrement())
  memberCode String      @unique @db.VarChar(20)
  firstName  String      @db.VarChar(100)
  lastName   String      @db.VarChar(100)
  phone      String      @db.VarChar(20)
  borrowings Borrowing[]

  @@index([memberCode])
}

model Borrowing {
  id               Int               @id @default(autoincrement())
  member           Member            @relation(fields: [memberId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  memberId         Int
  borrowDate       DateTime          @default(now()) @db.Timestamp(3)
  borrowingDetails BorrowingDetail[]

  @@index([memberId, borrowDate])
}

model BorrowingDetail {
  id          Int       @id @default(autoincrement())
  borrowing   Borrowing @relation(fields: [borrowingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  borrowingId Int
  book        Book      @relation(fields: [bookId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  bookId      Int
  dueDate     DateTime  @db.Timestamp(3)
  returnDate  DateTime? @db.Timestamp(3)

  @@index([borrowingId])
  @@index([bookId])
  @@index([dueDate, returnDate])
}
